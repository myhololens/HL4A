var FileAdapter = function(_列表) {

this.__proto__ = new Adapter();

var _刷新 = () => {
this.刷新();
}

let _界面 = _列表.getContext();

this.设置(_列表,function(_参数) {

let _项目 = 线性布局(_界面)
.置高度("自动")
.置方向("水平")
.置填充("16dp")
.置背景("透明")
.置单击事件(function() {
_参数.单击();
});

if (_参数.长按 != null) {
_项目.置长按事件(function(){
_参数.长按();
});
}

let _文本  = 文本控件(_界面)
.置文本(_参数.文本)
.加入到(_项目);

return _项目;

});

let 目录,_当前,按下,模式;

this.取目录 = () => {
return _当前;
}

this.初始化 = (_目录,_按下,_模式) => {
目录 = 文件.检查地址(_目录);
_当前 = 目录;
按下 = _按下;
模式 = _模式;
}

this.刷新 = () => {
this.清空();
if (模式 == true) {
if (目录 != _当前) {
this.添加({
文本 : "返回上级",
单击 : () => {
_当前 = 文件.取目录(_当前);
this.刷新();
}});
}
}
let _所有 = 文件.取文件列表(_当前);
for (let _键值 in _所有) {

let _文件 = _所有[_键值];
let _路径 = _文件.getPath();

this.添加({
文本 : _文件.getName(),
长按 : () => {
let _删除弹窗 = 弹窗.普通(_界面,
"删除文件",
"真的要删除 " +_文件.getPath()+" 吗?",
"删除",function() {
文件.删除(_文件.getPath());
弹窗.提示("删除完成 ~");
_刷新();
_删除弹窗.隐藏();
},
"取消",function() {
_删除弹窗.隐藏();
}).显示();
},
单击 : () => {
if (模式 == true) {
if (_文件.isFile()) {
按下(_文件);
} else {
_当前= _文件.getPath();
this.刷新();
}
} else {
按下(_文件);
}
}});

}

}

return this;

}