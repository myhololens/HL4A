导入 "#util.lua";

进行线程 = 线程(function()

  工程目录 = 文件.检查地址 "HL4A工程";

  _布局 = 创建布局 {
    线性布局;
    背景 = "白色";
    {
      标题栏;
      赋值 = "_标题";
      标题 = "乐园之土 内测 "..应用.版本名;
    };
    {
      下拉刷新布局;
      宽度 = "最大";
      高度 = "最大";
      赋值 = "_刷新";
      填充 = "16dp";
      {
        基本列表;
        赋值 = "_列表";
      }
    };
  };

  更新(_布局.打开,当前界面);

  function _添加项目(_名称)
    local _布局 = 创建布局({
      线性布局;
      宽度 = "最大";
      高度 = "46dp";
      左填充 = "16dp";
      背景 = "透明";
      重力 = "中间垂直";
      {
        文本控件;
        文本大小 = "12sp";
        文本 = _名称;
      }
    });
    _列表.添加视图(_布局);
    return _布局;
  end

  function _删除工程(n,p)
    处理.主线程(function()
      _删除弹窗 = 弹窗.普通(当前界面,
      "删除工程:"..n,
      "真的要删除吗？",
      "删除",function()
        _删除弹窗.隐藏();
        文件.删除(p);
        弹窗.提示("删除成功 ~");
        刷新工程();
      end,
      "取消",function()
        _删除弹窗.隐藏();
      end).显示();
    end,{});
  end

  function 刷新工程()
    _刷新.置刷新状态(true);
    _列表.清空();
    local _所有 = 文件.取文件列表(工程目录);
    if _所有 == nil then
      文件.删除(工程目录);
      File(工程目录).mkdirs();
      _所有 = 文件.取文件列表(工程目录);
    end
    if #_所有 == 0 then
      _添加项目("新建HL4A工程")
      .置单击事件(function()
        _新建工程.显示();
      end);
    else
      for n = 0, #_所有 -1 do
        local _单个 = _所有[n];
        if _单个.isDirectory() then
          local _设置文件 = _单个.Path.."/工程.xml";
          if 文件.是文件(_设置文件) then
            local _设置 = 设置.打开XML(_设置文件);
            _添加项目(_设置.工程名.." [".._设置.包名.."]")
            .置单击事件(function()
              当前界面.跳转脚本("#proj.lua",{_设置文件,_单个.Name,工程目录});
            end)
            .置长按事件(function()
              _删除工程(_单个.Name,_单个.Path);
            end);
          end
        end
      end
    end
    _刷新.置刷新状态(false);
  end

  _刷新.置刷新事件(刷新工程);

  local _新建工程布局 = 创建布局 {
    线性布局;
    {
      编辑框;
      赋值 = "__工程名";
      默认文本 = "工程名";
    };
    {
      编辑框;
      赋值 = "__包名";
      默认文本 = "包名";
    }
  };

  function _新建工程处理()
    if __工程名.文本 == "" then
      弹窗.提示 "工程名 不要留空 ~";
    elseif __包名.文本 == "" then
      弹窗.提示 "包名 不要留空 ~";
    else
      local _地址 = 工程目录.."/"..__工程名.文本;
      if 文件.是目录(_地址) then
        弹窗.提示 "工程名已存在 ~";
      else
        local _设置文件 = _地址.."/工程.xml";
        local _设置 = 设置.打开XML(_设置文件);
        _设置.工程名 = __工程名.文本;
        _设置.包名 = __包名.文本;
        设置.保存XML(_设置文件,_设置);
        文件.复制("@assets/example.lua",_地址.."/源码/index.lua");
        弹窗.提示 "工程创建成功！";
        刷新工程();
        _新建工程.隐藏();
      end
    end
  end

  处理.主线程(function()
    _新建工程 = 弹窗.普通(当前界面,
    "新建工程",
    _新建工程布局,
    "创建",function()
      _新建工程处理();
    end,
    "取消",function()
      _新建工程.隐藏();
    end
    )end,{})

  _标题菜单 = 菜单(_标题.右按钮对象)
  .添加("新建工程",function()
    _标题菜单.隐藏();
    _新建工程.显示();
  end)
  .添加("加讨论群",function()
    _标题菜单.隐藏();
    网络_QQ.乐园部();
  end)
  --[[  .添加("捐赠作者",function()
    _标题菜单.隐藏();
    网络.打开("https://QR.ALIPAY.COM/FKX06548P2GIOD2QYUKA36");
  end)
  ]]
  .添加("反馈错误",function()
    _标题菜单.隐藏();
    网络_QQ.作者();
  end)

  _标题.右按钮(function()
    _标题菜单.显示("左下");
  end);

  刷新工程();

end,{}).启动();

当前界面.界面刷新事件 = function()
  pcall(function()
    刷新工程();
  end);
end

当前界面.应用出错事件 = function(args)
  -- 第一个参数的第0位是throwable对象
  -- 返回true则不关闭当前Activity
  return true;
end
